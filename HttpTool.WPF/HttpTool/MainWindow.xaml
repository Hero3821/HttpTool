<Adu:AduWindow
    x:Class="HttpTool.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Adu="clr-namespace:AduSkin.Controls.Metro;assembly=AduSkin"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:AduSkin.Interactivity;assembly=AduSkin"
    xmlns:i1="clr-namespace:HttpTool.API"
     xmlns:AduOpenLink="clr-namespace:AduSkin.Interactivity;assembly=AduSkin"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:HttpTool.ViewModels"
    xmlns:view="clr-namespace:HttpTool.Views"
    Name="MainWin" WindowStyle="None" Title="HttpTool" Width="500" MinWidth="440"
    BorderBrush="#999" Background="#fff" Height="600" MinHeight="400"
    xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
    xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs"
    Icon="httptool.ico" WindowStartupLocation="CenterScreen" mc:Ignorable="d">
    <Window.DataContext>
        <viewmodels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HttpTool;component/Styles/SIcon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HttpTool;component/Styles/Expander.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HttpTool;component/Styles/FormControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HttpTool;component/Styles/AduDataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate DataType="{x:Type viewmodels:HttpPageViewModel}">
                <view:UC_HttpPage/>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:EventToCommand Command="{Binding AduMain_LoadCommand}" CommandParameter="{Binding ElementName=MainWin}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:EventToCommand Command="{Binding AduMain_ExiteCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:EventToCommand Command="{Binding AduMain_MouseLeftButtonDownCommand}"  CommandParameter="{Binding ElementName=MainWin}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="#FFF">
        <!--<Grid.Background>
            <ImageBrush ImageSource="Images/Background/Nor2.jpg" Stretch="UniformToFill" />
        </Grid.Background>-->
        <Grid Background="#05000000">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" WindowChrome.IsHitTestVisibleInChrome="True">
                <StackPanel Orientation="Horizontal" Margin="10,0" HorizontalAlignment="Left">
                    <Adu:AduButtonSvg Icon="{StaticResource Icon_Tool}" IconHeight="20" Foreground="#333" ToolTip="点击进入官网" IconWidth="20" Command="AduOpenLink:ControlCommands.OpenLink" CommandParameter="https://github.com/aduskin"/>
                    <TextBlock Text="HttpTool" VerticalAlignment="Center" FontSize="14"  FontWeight="Bold" Foreground="#333"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,-10,130,0" VerticalAlignment="Center">
                    <Adu:AduPathIconButton PathData="{StaticResource Icon_Succes}" CornerRadius="3" PathWidth="20" Height="30" Width="30" NormalPathColor="{StaticResource BorderBrush}" ToolTip="设置" MinWidth="40" Command="{Binding OpenSetting}"></Adu:AduPathIconButton>
                </StackPanel>
            </Grid>
            <ct:ChromeTabControl x:Name="MyChromeTabControl" Grid.Row="1" WindowChrome.IsHitTestVisibleInChrome="True"
                             HeaderMargin="2,10,150,0" Margin="0,0,0,0" MaximumTabWidth="200" TabPersistBehavior="Timed"
                             TabPersistDuration="0:0:0:5" AddTabButtonBehavior="OpenNewTab"
                             Background="Transparent" ItemsSource="{Binding ItemCollection}"
                             SelectedItem="{Binding SelectedTab}" SelectedTabBrush="#FFF" CanMoveTabs="False" DragWindowWithOneTab="True"
                             IsAddButtonVisible="{Binding ShowAddButton}"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             ReorderTabsCommand="{Binding ReorderTabsCommand}"
                             TabTearTriggerDistance="10" TabDraggedOutsideBonds="TabControl_TabDraggedOutsideBonds">
                <!--We override the control template here to show how you can modify the properties of tab panel and content presenter-->
                <ct:ChromeTabControl.Template>
                    <ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
                        <ControlTemplate.Resources>
                            <ctConv:TabPersistBehaviorToContentPresenterVisibilityConverter x:Key="TabPersistBehaviorToContentPresenterVisibilityConverter" />
                            <ctConv:TabPersistBehaviorToItemHolderVisibilityConverter x:Key="TabPersistBehaviorToItemHolderVisibilityConverter" />
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding Background}"
                                BorderThickness="0,0,0,1"
                                BorderBrush="#10000000"
                                Grid.Row="0"
                                Padding="10,5,10,0">
                                <ct:ChromeTabPanel IsItemsHost="True"
                                               Background="{TemplateBinding Background}" MouseMove="WrapPanel_MouseMove" MouseLeftButtonDown="Canvas_MouseLeftButtonDown"/>
                            </Border>

                            <Grid Grid.Row="1"
                              Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToContentPresenterVisibilityConverter}}">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                            </Grid>
                            <Grid x:Name="PART_ItemsHolder"
                              Grid.Row="1"
                              Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToItemHolderVisibilityConverter}}" />
                        </Grid>
                    </ControlTemplate>
                </ct:ChromeTabControl.Template>
                <!--We must override the item template to show our tab name in the header. Here we use a simple
            textblock, but you could put any combination of controls here. Uncomment the orange border to show
            the bounds of the header content presenter-->
                <ct:ChromeTabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

                            <!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
                            <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                                <Image Source="{Binding TabIcon}"
                                   Stretch="Fill"
                                       Margin="5,5,5,5" />
                                <TextBlock Text="{Binding TabName}"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" />
                            </StackPanel>
                            <!--</Border>-->

                            <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Close"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <MenuItem Header="Close other tabs"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />

                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ct:ChromeTabControl.ItemTemplate>
            </ct:ChromeTabControl>
        </Grid>
    </Grid>
</Adu:AduWindow>
